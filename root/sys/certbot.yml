##
# Run certbot to generate a certificate for a domain.
# nanocl state apply -s nhnr.io/sys/certbot.yml
##
Kind: Cargo
ApiVersion: v0.10

Args:
- Name: email
  Kind: String
- Name: domain
  Kind: String

Namespace: system

Cargoes:
- Name: certbot-gen
  Container:
    Image: ubuntu:latest
    HostConfig:
      AutoRemove: true
      PidMode: container:nproxy.system.c
      Binds:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/nanocl/proxy/secrets:/opt/secrets
      - /var/lib/nanocl/proxy/letsencrypt:/etc/letsencrypt
      - /var/lib/nanocl/proxy/run:/run
      - /run/nanocl/nanocl.sock:/run/nanocl/nanocl.sock
      - /var/lib/nanocl/proxy/sites-enabled:/etc/nginx/sites-enabled
      - /var/lib/nanocl/proxy/streams-enabled:/etc/nginx/sites-streams
    Cmd:
    - /bin/sh
    - -c
    - |
      apt-get update
      apt-get install -y wget certbot python3-certbot-nginx
      wget https://github.com/nxthat/nanocl/releases/download/nanocl-0.10.0-nightly/nanocl_0.10.0_amd64.deb
      dpkg -i nanocl_0.10.0_amd64.deb
      certbot --nginx --agree-tos --email ${{ Args.email }} -n -d ${{ Args.domain }}
      FULL_CHAIN=`cat /etc/letsencrypt/live/${{ Args.domain }}/fullchain.pem | awk 1 ORS='\\\n'`
      PRIV_KEY=`cat /etc/letsencrypt/live/${{ Args.domain }}/privkey.pem | awk 1 ORS='\\\n'`
      cat <<EOF > /tmp/secret.yaml
        ApiVersion: v0.10
        Kind: Secret
        Secrets:
          - Key: cert.${{ Args.domain }}
            Kind: Tls
            Data:
              Certificate: "$FULL_CHAIN"
              CertificateKey: "$PRIV_KEY"
      EOF
      nanocl state apply -ys /tmp/secret.yaml
